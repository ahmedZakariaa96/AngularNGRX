{"ast":null,"code":"import { invokePostApi } from \"../Actions/Posts.Action\";\nimport { map, switchMap } from \"rxjs\";\nimport { ofType } from \"@ngrx/effects\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/effects\";\nimport * as i2 from \"src/app/Services/Post.service\";\nclass PostEffect {\n  constructor(action$, postService) {\n    this.action$ = action$;\n    this.postService = postService;\n    this.getPosts$ = this.action$.pipe(ofType(invokePostApi), switchMap(() => this.postService.GetPosts().pipe(map(data => ({\n      type: '[Post API]  Post API Success',\n      posts: data\n    })))));\n  }\n}\nPostEffect.ɵfac = function PostEffect_Factory(t) {\n  return new (t || PostEffect)(i0.ɵɵinject(i1.Actions), i0.ɵɵinject(i2.PostService));\n};\nPostEffect.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: PostEffect,\n  factory: PostEffect.ɵfac\n});\nexport { PostEffect };","map":{"version":3,"names":["invokePostApi","map","switchMap","ofType","PostEffect","constructor","action$","postService","getPosts$","pipe","GetPosts","data","type","posts","i0","ɵɵinject","i1","Actions","i2","PostService","factory","ɵfac"],"sources":["C:\\Zakaria Data\\P1\\2023\\Angular\\NGRX\\src\\app\\AppStore\\Effects\\post.effect.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\n  import { PostService } from \"src/app/Services/Post.service\";\nimport { invokePostApi } from \"../Actions/Posts.Action\";\nimport { map, switchMap } from \"rxjs\";\nimport {  Effect, Actions, ofType } from \"@ngrx/effects\";\n\n@Injectable()\nexport class PostEffect {\n  constructor(private action$ :Actions,private postService:PostService)\n  {\n\n  }\n   getPosts$=this.action$.pipe(ofType(invokePostApi),switchMap(()=>\n    this.postService.GetPosts().pipe(map((data)=>({type:'[Post API]  Post API Success',posts:data})))\n  ))\n\n}\n\n\n"],"mappings":"AAEA,SAASA,aAAa,QAAQ,yBAAyB;AACvD,SAASC,GAAG,EAAEC,SAAS,QAAQ,MAAM;AACrC,SAA2BC,MAAM,QAAQ,eAAe;;;;AAExD,MACaC,UAAU;EACrBC,YAAoBC,OAAgB,EAASC,WAAuB;IAAhD,KAAAD,OAAO,GAAPA,OAAO;IAAkB,KAAAC,WAAW,GAAXA,WAAW;IAIvD,KAAAC,SAAS,GAAC,IAAI,CAACF,OAAO,CAACG,IAAI,CAACN,MAAM,CAACH,aAAa,CAAC,EAACE,SAAS,CAAC,MAC3D,IAAI,CAACK,WAAW,CAACG,QAAQ,EAAE,CAACD,IAAI,CAACR,GAAG,CAAEU,IAAI,KAAI;MAACC,IAAI,EAAC,8BAA8B;MAACC,KAAK,EAACF;IAAI,CAAC,CAAC,CAAC,CAAC,CAClG,CAAC;EAHF;;AAJWP,UAAU,C;mBAAVA,UAAU,EAAAU,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,OAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,WAAA;AAAA;AAAVf,UAAU,C;SAAVA,UAAU;EAAAgB,OAAA,EAAVhB,UAAU,CAAAiB;AAAA;SAAVjB,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}